#include <iostream>
#include <fstream>
vhky.gkljnuk
using namespace std;

string dec_to_binary(int dec);
string reg_to_binary(string reg);

int main()
{
    ifstream fin("input.txt");
    ofstream out("output.txt");
    if(fin.fail())
    {
        cout << "File opening failed.\n";
        exit(0);
    }

    string opcode;
    int num;
    string reg;

    while(!fin.eof())
    {
        fin >> opcode;

        if(opcode == "KLAR") // clear
        {
            out << "00000";
            out << "000000000000000000000000000";
        }
        else if(opcode == "INGRESSO") // input
        {
            out << "00001";
            fin >> num;
            out << dec_to_binary(num);
            out << "00000000000000000000";

        }
        else if(opcode == "DODAJ") // add
        {
            out << "00010";
            fin >> reg;
            for(int i = 0; i < 3; i++)
            {
                out << reg_to_binary(reg);
                fin >> reg;
            }
            out << "000000000000000000";
        }
        else if(opcode == "LEVON") // subtract
        {
            out << "00011";
            fin >> reg;
            for(int i = 0; i < 3; i++)
            {
                out << reg_to_binary(reg);
                fin >> reg;
            }
            out << "000000000000000000";
        }
        else if(opcode == "DUCAN") // store
        {
            out << "00100";
            fin >> num;
            out << dec_to_binary(num);
            fin >> reg;
            out << reg_to_binary(reg);
            out << "00000000000000000";
        }
        else if(opcode == "SLINGA") // loop
        {
            out << "00101";
        }
        else if(opcode == "LADEN") // load
        {
            out << "00110";
        }
        else if(opcode == "DIZI") // array
        {
            out << "00111";
        }
        else if(opcode == "SAIDA") //output
        {
            out << "01000";
            fin >> reg;
            out << reg_to_binary(reg);
            out << "000000000000000000000000";
        }
        else if(opcode == "HOPPA") // jump
        {
            out << "01001";
            fin >> num;
            out << dec_to_binary(num);
            out << "00000000000000000000";
        }
        else if(opcode == "OMET") // skip
        {
            out << "01010";
        }
        else if(opcode == "DUNCANAHA") // store register
        {
            out << "01011";
            fin >> reg;
            out << reg_to_binary(reg);
            fin >> reg;
            out << reg_to_binary(reg);
            out << "000000000000000000000";
        }
        else if(opcode == "TARMA") // multiply
        {
            out << "01100";
            for(int i = 0; i < 3; i++)
            {
                fin >> reg;
                out << reg_to_binary(reg);
            }
            out << "000000000000000000";
        }
        else if(opcode == "DIVIDIR") // divide
        {
            out << "01101";
            for(int i = 0; i < 3; i++)
            {
                fin >> reg;
                out << reg_to_binary(reg);
            }
            out << "000000000000000000";
        }
        else if(opcode == "MAGISTER") // exponent
        {
            out << "01110";
            for(int i = 0; i < 3; i++)
            {
                fin >> reg;
                out << reg_to_binary(reg);
            }
            out << "000000000000000000";
        }
        else if(opcode == "MUTU") // stop
        {
            out << "01111";
        }
        else if(opcode == "IPHELA") // populate
        {
            out << "10000";
        }
    }

    return EXIT_SUCCESS;
}

string dec_to_binary(int dec)
{
    string bin = "";
    if(dec == 0)
        return "0000000";
    while(dec / 2 != 0)
    {
        bin = to_string(dec % 2) + bin;
        dec /= 2;
    }
    bin = "1" + bin;
    while(bin.size() < 6)
        bin = "0" + bin;
    return bin;
}
string reg_to_binary(string reg)
{
    if(reg == "R1")
        return "000";
    else if(reg == "R2")
        return "001";
    else if(reg == "R3")
        return "010";
    else if(reg == "R4")
        return "011";
    else if(reg == "R5")
        return "100";
    else if(reg == "R6")
        return "101";
    else if(reg == "R7")
        return "110";
    else if(reg == "R8")
        return "111";
    else
    {
        cout << "Error\n";
        return 0;
    }
}
